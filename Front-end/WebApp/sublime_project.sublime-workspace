{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"border",
				"border-bottom"
			],
			[
				"unl",
				"fs.unlinkSync(path);"
			],
			[
				"tra",
				"translateY()"
			],
			[
				"mar",
				"margin"
			],
			[
				"bor",
				"border-radius"
			],
			[
				"borderr",
				"border-radius"
			],
			[
				"ali",
				"align-content"
			],
			[
				"tr",
				"translateZ()"
			],
			[
				"tran",
				"transform"
			],
			[
				"border-bo",
				"border-bottom"
			],
			[
				"box",
				"box-sizing"
			],
			[
				"get",
				"get	Get Elements"
			],
			[
				"inli",
				"inline-block"
			],
			[
				"bac",
				"background-size"
			],
			[
				"rgb",
				"rgba()"
			],
			[
				"achivments",
				"achivmentsDocs"
			],
			[
				"htg",
				"http.get(options, cb);"
			],
			[
				"ht",
				"http.Client();"
			],
			[
				"font",
				"font-family"
			],
			[
				"max",
				"max-width"
			],
			[
				"co",
				"color"
			],
			[
				"ma",
				"mainColor"
			],
			[
				"cur",
				"cursor"
			],
			[
				"ng-re",
				"ng-repeat	AngularJS"
			],
			[
				"ng-",
				"ng-bind	AngularJS"
			],
			[
				"ng-r",
				"ng-repeat	AngularJS"
			],
			[
				"tex",
				"text-decoration"
			],
			[
				"$loca",
				"$locationProvider	AngularJS"
			],
			[
				"fa",
				"fadeIn"
			],
			[
				"$state",
				"$stateParams"
			],
			[
				"bb",
				"border-bottom"
			],
			[
				"fsi",
				"font-size"
			],
			[
				"di",
				"display"
			],
			[
				"so",
				"softBlue"
			],
			[
				"c",
				"color"
			],
			[
				"inl",
				"inline-block"
			],
			[
				"f",
				"font-size"
			],
			[
				"v",
				"visibility"
			],
			[
				"w",
				"width"
			],
			[
				"bw",
				"border-width"
			],
			[
				"le",
				"letter-spacing"
			],
			[
				"t",
				"top"
			],
			[
				"pb",
				"padding-bottom"
			],
			[
				"m",
				"margin-bottom"
			],
			[
				"b",
				"background"
			],
			[
				"z",
				"z-index"
			],
			[
				"min",
				"min-height"
			],
			[
				"min-",
				"min-height"
			],
			[
				"li",
				"line-height"
			],
			[
				"con",
				"console.log();"
			],
			[
				"cons",
				"console.log();"
			],
			[
				"$sc",
				"$scope	AngularJS"
			],
			[
				"ng",
				"ng-bind	AngularJS"
			],
			[
				"ov",
				"overflow"
			],
			[
				"op",
				"opacity"
			],
			[
				"pos",
				"position"
			],
			[
				"in",
				"inline-block"
			],
			[
				"d",
				"display"
			],
			[
				"a",
				"auto"
			],
			[
				"h",
				"height"
			],
			[
				"sc",
				"$scope	AngularJS"
			],
			[
				"modu",
				"verbose_module	AngularJS"
			],
			[
				"uS",
				"User"
			],
			[
				"prot",
				"prototype"
			],
			[
				"s",
				"slice"
			],
			[
				"r",
				"return"
			],
			[
				"stude",
				"student"
			],
			[
				"for",
				"forEach"
			],
			[
				"str",
				"string"
			],
			[
				"exe",
				"execute"
			],
			[
				"show",
				"showUsers"
			],
			[
				"se",
				"select"
			],
			[
				"S",
				"SELECT"
			],
			[
				"fun",
				"function"
			],
			[
				"q",
				"query"
			],
			[
				"th",
				"this"
			],
			[
				"fu",
				"function"
			],
			[
				"te",
				"title	Attr"
			],
			[
				"local",
				"localhost"
			],
			[
				"php",
				"phpinfo"
			],
			[
				"ar",
				"array"
			]
		]
	},
	"buffers":
	[
		{
			"file": "db/mongoose.js",
			"settings":
			{
				"buffer_size": 1112,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n   <section class=\"page_content\">\n    <div class=\"vertical_offset\">\n    <div class=\"row\">\n        <div class=\"achD_card small-12 medium-9 medium-centered columns\">\n\n        <div class=\"row\">\n            <div class=\"preloader_wrapper sB_preloader\" ng-if=\"onLoad.common\">\n      <div class=\"preloader\"></div>\n      <div class=\"preloader_circle\"></div>\n      </div>\n\n            <div class=\"achD_title small-12 columns\"ng-bind=\"achivment.name\"></div>\n            <a ui-sref=\"profile({id: achivment.owner._id})\" class=\"achD_ownerLink\" ng-bind=\"achivment.owner.firstName + ' ' + achivment.owner.lastName\"></a>\n        </div>\n        \n\n            <div class=\"row\" ng-if=\"!onLoad.common\">\n            <div class=\"achD_details small-12 medium-8 columns\">\n                <ul class=\"achD_detailsList small-12 columns\">\n                    <li class=\"row\">\n                    <span class=\"achD_detailsListLabel small-4 columns\">Категория</span>\n                    <span class=\" achD_detailsListDesc small-8 columns\" ng-bind=\"achivment.type\"></span>\n                    </li>\n                    <li class=\"row\">\n                    <span class=\"achD_detailsListLabel  small-4 columns\">Уровень</span>\n                    <span class=\"achD_detailsListDesc small-8 columns\" ng-bind=\"achivment.level\"></span>\n                    </li>\n                    <li class=\"row\">\n                    <span class=\"achD_detailsListLabel  small-4 columns \">Организация</span>\n                    <span class=\"achD_detailsListDesc small-8 columns\" ng-bind=\"achivment.organization\"></span>\n                    </li>\n                    <li class=\"row\">\n                    <span class=\"achD_detailsListLabel  small-4 columns\">Результат</span>\n                    <span class=\"achD_detailsListDesc small-8 columns\" ng-bind=\"achivment.result\"></span>\n                    </li>\n                    <li class=\"row\">\n                    <span class=\"achD_detailsListLabel  small-4 columns\">Получено</span>\n                    <span class=\"achD_detailsListDesc small-8 columns\" ng-bind=\"achivment.created\"></span>\n                    </li>\n                    <li class=\"row\">\n                    <span class=\"achD_detailsListLabel  small-4 columns\">Статус</span>\n                    <span class=\"achD_detailsListDesc small-8 columns\" ng-bind=\"achivment.checked ? 'Подтверждено' : 'Не подтверждено'\"></span>\n                    </li>\n                </ul>\n            </div>\n\n            <div class=\"achD_files small-12 medium-3 columns\">\n                <ul class=\"achD_filesList\">\n                    <li ng-repeat=\"file in achivment.files\">\n                        <div class=\"achD_filePrev\" style=\"background-image: url({{isPdf(file) ? '../icons/interface.png' : file}}); background-size: cover;\" ng-click='$parent.showPhoto(file)'></div>\n                    </li>\n                </ul>\n            </div>\n\n            <div class=\"row\"></div>\n            <div class=\"achD_rejected small-12 columns\" ng-if=\"achivment.message\">\n                <p class=\"achD_rejectedMsg\"ng-bind=\"'Отказано: ' + achivment.message \"></p>\n            </div>\n\n            <div class=\"achD_description small-12 columns\">\n                <p class=\"achD_desctiptionP\" ng-bind=\"achivment.description\"></p>\n            </div>\n\n        </div>\n    </div>\n    </div>\n</section>\n\n<div class=\"fp_backdrop\" ng-if='visiblePhoto' ng-click='$parent.visiblePhoto = false'>\n<img class='small-centered columns' src=\"{{photoToShow}}\" alt=\"\">\n\n</div>",
			"file": "public/partials/achivment.html",
			"file_size": 3641,
			"file_write_time": 131073483287613220,
			"settings":
			{
				"buffer_size": 3483,
				"line_ending": "Windows"
			}
		},
		{
			"file": "public/styles/main.scss",
			"settings":
			{
				"buffer_size": 35952,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n/* Controllers */\nangular.module('app.controllers',\n[\n'app.controllers.main',\n'app.controllers.partials',\n'ui.router'\n]);\n\n\nangular.module('app.controllers.partials',\n[ \n  'ui.router'\n])\n  \n  .controller('indexCtrl',\n   ['$scope',\n    'API',\n    'avatar',\n   function($scope, API, avatar){\n\n      var studentsLimit = 3;\n      $scope.lastStudents = [];\n      $scope.avatar = avatar;\n      API.query('students.getLast', null, true).then(function(res) {\n        var result = res.data;\n         result = result.map(function(student) {\n          student.achivments = student.achivments.filter(function(ach) {\n            return ach.checked;\n          });\n          student.achivments = student.achivments.sort(function(a, b) {\n             var aCr = new Date();\n             aCr.setTime(Date.parse(a.created));\n             var bCr = new Date();\n             bCr.setTime(Date.parse(b.created));\n             return a > b ? 1 : -1\n          });\n          student.achivments = student.achivments.reverse();\n          return student;\n        });\n         console.log(result);\n        \n          $scope.lastStudents = result.slice(0, studentsLimit);\n        \n      })\n      \n  }])\n\n  .controller('studentsBaseCtrl',\n   ['$scope',\n    '$http',\n    'API',\n    'avatar',\n   function ($scope, $http, API, avatar) {\n\n      $scope.$emit('changeTitle', {title: 'База активистов НИТУ МИСиС'});\n      $scope.$emit('loadData', {field: 'common'});\n\n      $scope.avatar = avatar;\n      var studentsList;\n      var viewItemCount = 5;\n      getAllStudents();\n\n      $scope.$watch('searchParams.category', function() {\n        $scope.searchParams.name = '';\n        var category = '';\n        switch($scope.searchParams.category) {\n          case 'Наука' : category = 'science';  break;\n          case 'Общественная деятельность' : category = 'social'; break;\n          case 'Культура' : category = 'cultural'; break;\n          case 'Спорт' : category = 'sport'; break;\n          case 'Учеба' : category = 'study'; break;\n          case 'Предпринимательство' : category = 'business'; break;\n          case 'Межкультурный диалог' : category = 'international'; break;\n          case 'Все' : category = ''; break;\n        }\n         \n        $scope.getStudentsList({name: '', category: category});\n        \n       })\n\n      $scope.getMoreStudents = function() {\n        var cropArr = studentsList;\n        var newElems = cropArr.slice($scope.searchResults.length, $scope.searchResults.length + 3);\n        \n        $scope.searchResults = $scope.searchResults.concat(newElems);\n      }\n\n      $scope.getStudentsList = function(searchParams) {\n         $scope.$emit('loadData', {field: 'common'});\n         $scope.searchResults = {};\n\n         if(searchParams.category == '' && searchParams.name == '' ) {\n            getAllStudents();\n         } else {\n          API.query('students.search', {searchParams: searchParams}, true).then(function(result) {\n            studentsList = result.data;\n            var cropArr = studentsList;\n            $scope.searchResults = cropArr.slice(0, 4);\n            $scope.$emit('loadData_done', {field: 'common'});\n          })\n        }\n      };\n\n      function getAllStudents() { \n\n        API.query('students.get', null, true).then(function(result) {\n          studentsList = result.data.reverse();\n          var cropArr = studentsList;\n          $scope.searchResults = cropArr.slice(0, 4);\n           $scope.$emit('loadData_done', {field: 'common'});\n        })\n      }\n    }\n\n  ]) \n\n  .controller('accountCtrl',\n   ['$scope',\n    '$http',\n    '$state',\n    'Upload',\n    'avatar',\n   function ($scope, $http, $state, Upload, avatar) {\n\n    $scope.$emit('changeTitle', {title: 'Профиль студента'});    \n    $scope.$emit('needAuth');\n    $scope.avatar = avatar;\n    $scope.showEditField = false;\n    $scope.userDetail = $scope.currentUser; \n    $scope.oldAbout = '';\n    $scope.newUserDetail = '';\n\n    $scope.$on('userUpdated', function() {\n      $state.reload();\n    });\n\n      $scope.editUserDetail = function () {\n        $scope.showEditField= true;\n        $scope.newUserDetail = $scope.userDetail.about;\n        $scope.oldAbout = $scope.userDetail.about;\n        $scope.userDetail.about = '';\n      };\n\n      $scope.applyChanges = function () {    \n        console.log($scope.newUserDetail);\n        $scope.userDetail.about = $scope.newUserDetail;\n        $http.post('/api/students/' + $scope.currentUser._id, {about : $scope.newUserDetail}).success(function(data) {\n          $scope.$emit('showMessage', {msg: 'Информация успешно изменена',  type: 'good'});\n        });\n        $scope.showEditField = false;    \n      };\n\n      $scope.notApplyChanges = function () {\n          $scope.showEditField = false;\n          $scope.newUserDetail = '';\n          $scope.userDetail.about = $scope.oldAbout;\n      };\n\n      $scope.uploadAvatar = function(avatar) {\n        Upload.upload({\n            url: '/api/students/' + $scope.currentUser._id + '/avatar',\n            data: {avatar : avatar}\n          }).then(function(res) {\n            $scope.$emit('userUpdate');\n            $scope.$emit('showMessage', {msg: 'Аватар успешно изменен',  type: 'good'});\n           \n          })\n\n      };\n    }\n  ])\n  \n  .controller('profileCtrl',\n   ['$scope',\n    '$http',\n    '$stateParams',\n    'avatar',\n   function($scope, $http, $stateParams, avatar){\n\n     $scope.avatar = avatar;\n     $scope.student = {};\n     $scope.$emit('loadData', {field: 'common'});\n     $http.get('/api/students/' + $stateParams.id).success(function(data) {\n     console.log(data);\n     $scope.student = data;\n     $scope.$emit('loadData_done', {field: 'common'});\n     })\n\n  }])\n\n  .controller('achCtrl', \n    ['$scope', \n      '$state', \n      'API',\n      '$stateParams',\n      '$window',\n     function($scope, $state, API, $stateParams, $window){\n\n        var ach = {};\n        var owner = {};\n        $scope.visiblePhoto = false;\n        $scope.$emit('loadData', {field: 'common'});\n\n        API.query('achivments.getDetail', \n\n                  {\n\n                    achId: $stateParams.achId, \n                    studentId: $stateParams.studentId \n\n                  }).then(function(res) {\n                    if(res.data) {\n                      ach = res.data.achivment;\n                      owner = res.data.owner;\n                    }\n\n                    var type = '';\n\n                      switch(ach.type) {\n                        case 'science' : type = 'Наука';  break;\n                        case 'social' : type = 'Общественная деятельность'; break;\n                        case 'cultural' : type = 'Культура'; break;\n                        case 'sport' : type = 'Спорт'; break;\n                        case 'study' : type = 'Учеба'; break;\n                        case 'business' : type = 'Предпринимательство'; break;\n                        case 'international' : type = 'Межкультурный диалог'; break;\n                      };\n\n                      var cr = new Date();\n                      cr.setTime(Date.parse(ach.created));\n\n                      $scope.achivment = ach;\n                      $scope.achivment.type = type;\n                      $scope.achivment.owner = owner;\n                      $scope.achivment.created =  cr.getDate() + '.' + (cr.getMonth() + 1) + '.' + cr.getFullYear();\n                      $scope.$emit('loadData_done', {field: 'common'});\n\n                      var details = {\n                        type: {\n                          title: \"категория\"\n                        },\n                        level: {\n                          title: \"уровень\"\n                        },\n                        created: {\n                          title: \"получено\"\n                        },\n                        organization: {\n                          title: \"организация\"\n                        },\n                        result: {\n                          title: \"результат\"\n                        },\n                        checked: {\n                          title: \"подтверждено\"\n                        }\n                      };\n\n                      $scope.details = {};\n\n                      details.forEach(function(item, key) {\n                        $scope.details[key] = {};\n                        $scope.details[key].title = item.title;\n                        $scope.details[key].value = $scope.achivment[key];\n                      });\n\n                      console.log($scope.details);\n                  });\n        \n\n        $scope.isPdf = function(photo) {\n          return !(photo.split('.').indexOf('pdf') == -1);\n        }\n         \n        $scope.showPhoto = function(photo) {\n          if(!$scope.isPdf(photo)) {\n            $scope.photoToShow = photo;\n            $scope.visiblePhoto = true;\n          } else {\n            var url = $scope.BASE_URL + photo.slice(1, photo.length);\n            $window.open(url);\n          }\n         }\n       }])\n\n  .controller('newAchCtrl',\n    ['$scope',\n     '$http',\n     '$timeout',\n     'Upload',\n     '$state',\n    function($scope, $http, $timeout, Upload, $state) {\n\n    $scope.newAch = {};    \n    $scope.type = 'Наука';\n    $scope.files = [];\n    $scope.selectedFiles = [];\n    $scope.$watch('type', function() {\n\n      var category = '';\n        switch($scope.type) {\n          case 'Наука' : category = 'science';  break;\n          case 'Общественная деятельность' : category = 'social'; break;\n          case 'Культура' : category = 'cultural'; break;\n          case 'Спорт' : category = 'sport'; break;\n          case 'Учеба' : category = 'study' ; break;\n          case 'Предпринимательство' : category = 'business'; break;\n          case 'Межкультурный диалог' : category = 'international'; break;\n        }\n        $scope.newAch.type = category;\n    });\n     \n\n    $scope.isValid =  function () {\n            return ($scope.files.length != 0) \n            && $scope.newAch.name\n            && $scope.newAch.result\n            && $scope.newAch.organization;\n          };\n\n    $scope.uploadFile = function(file) {\n      console.log(file);\n      if(file.name && $scope.selectedFiles[file] != -1 ) {\n      $scope.$emit('loadData', {field: 'file'});\n      $scope.selectedFiles.push(file);\n      Upload.upload({\n        url: '/api/students/' + $scope.currentUser._id + '/achivments/file',\n        data: {file: file}\n          }).then(function(res) {\n            console.log(res);\n              $scope.$emit('loadData_done', {field: 'file'});\n            if(!res.data) {\n              $scope.$emit('showMessage', {msg: 'Произошла ошибка',  type: 'bad'});\n            } else {\n              $scope.$emit('showMessage', {msg: 'Файлы отправлены',  type: 'good'});\n              $scope.files.push(res.data.fileLink);\n            }\n         })\n        } else {\n          $scope.$emit('showMessage', {msg: 'Файл уже выбран',  type: 'bad'});\n        }\n\n         $scope.isPdf = function(photo) {\n          return !(photo.split('.').indexOf('pdf') == -1);\n        }\n    };      \n  \n    $scope.submit = function() {\n      if ($scope.isValid()) {\n        $scope.$emit('waiting')\n        $scope.newAch.owner_id = $scope.currentUser._id;\n        $scope.newAch.files = $scope.files;\n          $http.post('/api/students/' + $scope.currentUser._id + '/achivments/', $scope.newAch).success(function(res) {\n            $scope.$emit('showMessage', {msg: 'Достижение добавлено, ожидайте подтверждения',  type: 'good'});\n            $scope.$emit('userUpdate');\n            $state.go('studentsBase');\n          })\n      } else {\n        $scope.$emit('showMessage', {msg: 'Заполните все поля формы и добавьте подтверждающие документы',  type: 'bad'})\n      }\n\n    }\n  }])\n\n  .controller('authCtrl',\n   ['$scope',\n    '$http',\n    'UserManager', \n    '$state',\n   function($scope, $http, UserManager, $state){\n\n    $scope.submit = function() {\n      if($scope.auth.$valid) {\n\n      $http.post('/api/login', $scope.auth).success(function(res) {\n        console.log(res); \n        if(res.data) {\n          $scope.$emit('auth');\n          $state.go('studentsBase');\n        } else {\n          $scope.$emit('showMessage', {msg: 'Студент не найден, проверьте введенные данные', type: 'bad'});\n        }\n      })\n     }\n    };\n  }])\n\n  .controller('registryCtrl', \n    ['$scope', \n     '$state', \n     '$http', \n    function($scope, $state, $http){\n\n    $scope.newStudent = {};\n\n\n    $scope.submit = function() {\n      if($scope.newStudent.$valid && $scope.newStudent.password == $scope.checkPassword) {\n       $http({\n          method  : 'POST',\n          url     : '/api/students/',\n          data    : $scope.newStudent\n          \n         }).success(function(res) {\n          $scope.$emit('showMessage', {msg: 'Регистрация прошла успешно, ждите верификации', type: 'good'});\n          $state.go('auth')\n         })\n      \n    }\n    };\n\n  }])\n",
			"file": "public/js/controllers.js",
			"file_size": 13874,
			"file_write_time": 131073495589743262,
			"settings":
			{
				"buffer_size": 12842,
				"line_ending": "Windows"
			}
		},
		{
			"file": "public/js/services.js",
			"settings":
			{
				"buffer_size": 4887,
				"line_ending": "Windows"
			}
		},
		{
			"file": "public/js/controllers_main.js",
			"settings":
			{
				"buffer_size": 3272,
				"line_ending": "Windows"
			}
		},
		{
			"file": "public/js/app.js",
			"settings":
			{
				"buffer_size": 2361,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/JSHint/JSHint.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Nodejs/Nodejs.sublime-build",
					""
				],
				[
					"Packages/JSHint/JSHint.sublime-build",
					""
				]
			],
			[
				"Packages/JSHint/JSHint.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 311.0,
		"last_filter": "Package Control: i",
		"selected_items":
		[
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"js",
				"JSHint"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"i",
				"Insert Filepath"
			],
			[
				"sn pat",
				"Snippet: JS singleton pattern"
			],
			[
				"sni ser",
				"Snippet: Snippet: HTTP Create Server"
			],
			[
				"sni re",
				"Snippet: require"
			],
			[
				"Snippet: s",
				"Snippet: Snippet: HTTP Create Server"
			],
			[
				"Package Control:  i",
				"Package Control: Install Package"
			]
		],
		"width": 488.0
	},
	"console":
	{
		"height": 160.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/user pc/Desktop/test",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/styles/lib/font-awesome"
	],
	"file_history":
	[
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/js/admin_controllers.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/api/user.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/db/schemas/emailTemplate.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/db/schemas/receiverGroup.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/profile_another.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/main.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/styles/main.scss",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/js/app.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/js/build/build.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/js/controllers_main.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/js/services.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/node_modules/nodemailer/README.md",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/js/controllers.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/studentsBase.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/routes/api.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/app.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/package.json",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/api/achivments.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/db/schemas/emailReceiver.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/db/schemas/student.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/api/admin.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/api/students.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/api/mailer.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/config.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/db/models/admin.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/db/models/student.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/db/mongoose.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/profile.html",
		"/C/Users/user pc/Desktop/ыв/Новый текстовый документ.txt",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/db/schemas/admin.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/partials/achivment.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/auth.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/achivment.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/api/mail.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/_test/test-helper.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/styles/load.css",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/db/schemas/achivment.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/db/schemas/commonMethods.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/styles/main.css",
		"/C/Users/user pc/Google Диск/AU_15/2 семестр/ООП/Практика/9 норматив/n9_s3_52.txt",
		"/C/Users/user pc/Google Диск/AU_15/2 семестр/ООП/Практика/9 норматив/n9_s3_47.txt",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/api/common.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/addAchivment.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/views/index.jade",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/registry.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/js/controllers_main.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/js/admin_app.js",
		"/C/Users/user pc/Dropbox/repos/Movie-Extended/WA/routes/index.js",
		"/C/Users/user pc/Downloads/of_v0.9.3_vs_release/INSTALL.md",
		"/C/Users/user pc/Downloads/My Project-c9ecec05a342.json",
		"/C/Users/user pc/Google Диск/AU_15/2 семестр/ООП/Практика/8 норматив/n8_s3_9.txt",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/styles/ring.css",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/admin_inbox.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/partials/profile.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/routes/index.js",
		"/C/Program Files/iisnode/www/helloworld/web.config",
		"/C/Program Files/iisnode/www/helloworld/hello.js",
		"/C/Program Files/iisnode/www/express/web.config",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/bin/www",
		"/C/Program Files/iisnode/www/express/hello.js",
		"/C/Program Files/iisnode/README.md",
		"/C/Program Files/iisnode/www/configuration/web.config",
		"/C/Program Files/iisnode/www/configuration/hello.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/web.config",
		"/C/Users/user pc/Downloads/Telegram Desktop/MovieExtendedRoutes.txt",
		"/C/Users/user pc/Documents/Movie-Extended/front-end/WebApp/bin/www",
		"/C/Program Files/iisnode/www/helloworld/helloClient.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/js/services.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/gulpfile.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/partials/fullPhoto.html",
		"/C/Users/user pc/AppData/Local/Programs/Python/Python35/README.txt",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/partials/admin_inbox.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/partials/invite.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/partials/registry_admin.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/api/config.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/js/build/build.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/views/admin.jade",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/admin/partials/authAdmin.html",
		"/C/Users/user pc/Downloads/ring.css",
		"/C/Users/user pc/Documents/Movie-Extended/front-end/WebApp/node_modules/body-parser/node_modules/bytes/History.md",
		"/C/Users/user pc/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/user pc/AppData/Roaming/Sublime Text 3/Packages/User/InsertFilepath.sublime-settings",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/bower_components/ng-dialog/css/ngDialog-theme-default.css",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/bower_components/ng-dialog/css/ngDialog.css",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/views/layout.jade",
		"/C/Users/user pc/Desktop/GitHubLog.txt",
		"/C/Users/user pc/Desktop/Новый текстовый документ.txt",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/bower_components/ng-dialog/README.md",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/styles/load.scss",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/load.html",
		"/C/Users/user pc/Downloads/Telegram Desktop/000479.cpp",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/icons/logo.png",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/js/admin_app.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/js/admin_controllers.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/js/directives.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/achivments_popup.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/api/reqParser.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/js/lib/ng-file-upload.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/index.html",
		"/C/Users/user pc/Desktop/1iwE-uDw97w.jpg",
		"/C/Users/user pc/Desktop/test/newsfeed.html",
		"/C/Users/user pc/Desktop/test/m.css",
		"/C/Users/user pc/Documents/GitHub/HockeyBets/tmp/news.tpl.php",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/partials/main_footer.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/js/config.js",
		"/C/Users/user pc/Documents/GitHub/extendedmovie/bin/www",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/achivments_popup.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/jade/header.jade",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/jade/index.jade",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/jade/layout.jade",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/jade/studentsBase.jade",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/public/views/index.html",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/WebApp/foundation.min.css",
		"/C/Users/Default/AppData/Local/sys.js",
		"/C/Users/user pc/Documents/GitHub/Movie-Extended/Front-End/WebApp/gulpfile.js",
		"/C/Users/user pc/Documents/GitHub/Movie-Extended/Front-End/WebApp/public/angular/angular-route.min.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/jade/public/styles/main.css",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/jade/gulpfile.js",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/jade/bower_components/font-awesome/css/font-awesome.css",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/jade/bower_components/font-awesome/HELP-US-OUT.txt",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/jade/bower_components/gulp/.bower.json",
		"/C/Users/user pc/Documents/GitHub/ActivityAggregator/Front-end/jade/bower_components/font-awesome/css/font-awesome.min.css",
		"/C/Users/user pc/Documents/GitHub/extendedmovie/app/js/services.js",
		"/C/Users/user pc/Documents/GitHub/extendedmovie/app/js/controllers.js",
		"/C/Users/user pc/Google Диск/AU_15/Анькин калькулятро/калькулятор/WindowsFormsApplication1/bin/Debug/log_result.txt",
		"/C/Users/user pc/Google Диск/AU_15/Анькин калькулятро/калькулятор/WindowsFormsApplication1/bin/Debug/log.txt",
		"/C/Users/user pc/Desktop/results.txt",
		"/C/Users/user pc/AppData/Local/Temp/Rar$DIa0.865/app.css"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"C:\\Users\\user pc\\Documents\\GitHub\\ActivityAggregator\\Front-end\\WebApp"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Зарегистрируйтесь",
			"head",
			"link",
			"short_in",
			"config",
			"avatar",
			";\n",
			"margin-left: 10px;",
			"short_achivments_list",
			"		\n",
			"projectName_title",
			"ach",
			"input",
			"shortList_ite\n",
			"shortList_item\n",
			">\n",
			"studItem",
			"texta",
			"input",
			"sb_pre",
			"input",
			"ach",
			"input",
			"sB_loadMoreBtn",
			"popup",
			"ownerLi",
			"profile_lin",
			"font-family: Calibri",
			"nav_bar a",
			"font-family",
			"trans",
			"transo",
			"project",
			"form_card",
			"form",
			"input",
			"avata",
			"project_",
			"input",
			"form",
			"card",
			"achivment",
			"ach",
			"achivment",
			"btn_edit_user_detail",
			"newStudent",
			"cry",
			"achivment_result",
			"detail_label",
			"input",
			"achivment_deta",
			"config",
			"function getStudents",
			"achivment",
			"card",
			"ach",
			"card",
			"studentsBase",
			"base",
			"achivment",
			"id",
			"id_",
			"newAch.",
			"input",
			"ngFileUpload",
			"avatar",
			"btn_add",
			"achivment",
			"btn",
			"add_ach",
			"achivment",
			"\"></",
			"ach",
			"req.body",
			"input",
			"'",
			"achivment_detail",
			"\"",
			"'",
			"__",
			"cinemaToShow",
			"\"",
			"projectContents",
			" httpd-vhosts.conf ",
			"Include httpd-vhosts.conf ",
			"Include httpd-vhosts.conf \n",
			"Include etc/extra/httpd-vhosts.conf \n",
			"virtual"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"btn_ghost",
			"newAdmin",
			"newAch.info.",
			"newAch.info",
			"fields",
			"\"",
			"'",
			"\"",
			"_",
			"cinemaToShowResolve",
			"'",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "db/mongoose.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1112,
						"regions":
						{
						},
						"selection":
						[
							[
								1100,
								1100
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tabs_extra_last_activated": 1462802987.43,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "public/partials/achivment.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3483,
						"regions":
						{
						},
						"selection":
						[
							[
								1433,
								1433
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1462875982.58,
							"tabs_extra_last_activated_sheet_index": 1,
							"tabs_extra_spawned": true,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "public/styles/main.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35952,
						"regions":
						{
						},
						"selection":
						[
							[
								35363,
								35363
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1462875991.88,
							"tabs_extra_last_activated_sheet_index": 2,
							"tabs_extra_spawned": true,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7348.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "public/js/controllers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12842,
						"regions":
						{
						},
						"selection":
						[
							[
								5652,
								5652
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1462876219.77,
							"tabs_extra_last_activated_sheet_index": 3,
							"tabs_extra_spawned": true,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2871.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "public/js/services.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4887,
						"regions":
						{
						},
						"selection":
						[
							[
								3910,
								3910
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1462874693.95,
							"tabs_extra_last_activated_sheet_index": 3,
							"tabs_extra_spawned": true,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1407.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "public/js/controllers_main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3272,
						"regions":
						{
						},
						"selection":
						[
							[
								3244,
								3221
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1462876183.98,
							"tabs_extra_last_activated_sheet_index": 5,
							"tabs_extra_spawned": true,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1531.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "public/js/app.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2361,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1462876185.02,
							"tabs_extra_last_activated_sheet_index": 6,
							"tabs_extra_spawned": true,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				2,
				1
			],
			[
				0,
				1,
				1,
				2
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			0.924812030075,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 32.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.nodejs":
	{
		"height": 177.0
	},
	"output.xdebug":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "sublime_project.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"xdebug":
		{
			"hide_conflict": false,
			"restore_index":
			{
				"51":
				{
					"group": 0,
					"index": 0
				},
				"52":
				{
					"group": 0,
					"index": 1
				},
				"53":
				{
					"group": 0,
					"index": 2
				},
				"54":
				{
					"group": 0,
					"index": 3
				},
				"55":
				{
					"group": 0,
					"index": 5
				},
				"56":
				{
					"group": 0,
					"index": 4
				}
			},
			"restore_layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			}
		}
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 246.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
